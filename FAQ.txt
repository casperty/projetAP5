Remarques, questions, etc. Partagez vos pens�es ici ! ;-)
--
De Alexandre :
===============
1) methode onMouseDragged 
>>> Pourquoi pas mettre la m�thode en commun pour Oval et Rectangle ? (idem pour les autres m�todes "onMouse...")
Vu que c'est exactement le m�me code, on pourrait se simplifier la vie non ?

2) Need more explainations for Model.java :'(

3) Je trouve que les noms de variables ne sont pas assez explicites, bon on comprends (genre sz pour size) mais 
y a moyen de les rendre un peu plus compr�hensibles sans pour autant avoir des noms � rallonge, 
genre sizeOval au lieu de sz.

4) Vu qu'on parlait des diff�rents formats...Je sais qu'on en est pas encore l� mais �a
ma taraude cette histoire xD Que pensez vous du format SVG ? :-)

5) pour le redo undo, on devrait faire un layer manager ce serait plus simple non ?


(François): 
1) je pense qu'il faut attendre d'avoir definie cette methode pour toute les formes que l'on souhaite (polygon..),
   et donc definir les outils (oval, rectangle, polygon , et..)
  puis modifier les doublons, la methode est actuellement mal faite je pense qu'il faut definir d'autre methode
  moveTo(Coord c), resize(Coord sz)... 
  puis elles n sont pas identique il me semble que pour l'oval je garde en memoire la position initiale pour permettre
  de tracer vers -x -y puis de retracer vers x y sans modifier la position initiale
            
2) Centralise les informations, couleurs, formes, evenement souris..

3) a voir apres restructuration, size dans la classe forme etc..

4) pour enregistrer notre travail et pouvoir le recuperer par la suite je pense qu'un fichier texte
            par exemple "Oval.class:2:2:(ColorModel.class:255:255:255:255):true"
                        "Oval.class:5:5:(ColorModel.class:255:255:255:255):true"
            Permet de recréer les objets: Class c = Class.forName("Oval.class")...
            c.newInstance()..
  Mais avant d'ecrire une classe qui permette de lire/ecrire ces fichiers il faut avoir bien avancé sur les fonctions 
  de bases pour ne pas devoir tout réecrire apres.
            
5) 

Guillaume :

Petite quesiton : en quoi consiste concrétement le boolean created dans Forme.java ?

15/12/13
Problèmes à regler :
Couleurs des objets. GROS BUG xD
Polygon : je pense qu'on devrait revoir un peu la manière de construire notre polygone. A discuter demain.

17/12/13
J'ai proposé une solution pour le code hexa, François tu penses pouvoir l'implémenter ? :-)
Guillaume ça te dit de travailler sur l'enregsitrement du fichier (et éventuellement l'ouverture) ? :-)

Francois:
Je ne pourrais pas travailler sur le projet avant jeudi je pense.
J'ai quand même regarder le code pour convertir hexa => rgb , on devrait pouvoir l'ajouter.

Guillaume :
Oui je voudrais bien m'occuper de l'enregistrement (et de l'ouverture) puisque j'ai absolument rien fait dans le projet et je voudrais quand même bosser un minimum dessus.

21/12/13
Alexandre :
Pour l'instant je ne touche pas au code, j'attends que Guillaume aie rajouté son code...
Je vais de mon côté mettre les icones pour les nouveaux outils. 
Par contre, il y a un bug au niveau du colorwheel, je peux saisir le code hexa :D Mais pas le rgb :'(
Redimensionnement pas au point non plus n'est-ce pas ? (j'arrivais pas à redimensionner)
Bonne soirée ! :)

26/12/13
Alexandre :
J'espère que tout le monde a passé un bon moment en famille pour Noël. :D
Aujourd'hui je suis revenu sur le code pour voir un peu ce qu'a fait Guillaume, c'est plutôt bien :)
J'ai commencé à faire l'export des images (pas vraiment demandé, mais peut être un plus). 
J'ai choisi l'export en SVG, car c'est le format par defaut pour le dessin vectoriel ^^
Et c'est plutôt pas compliqué à manipuler quand on a compris les grandes lignes. 
On fera si vous voulez aussi un export en JPG.
Il faudra aussi voir l'import (demandé)...D'où la necessité de faire des calques, je trouve.
Bon en espérant que certains passeront sur github avant la fin de vacances, bonne fin de semaine.

28/12/13
A mon avis pour l'import/export il faut:
-pouvoir enregistrer en .afg et pouvoir ouvrir les fichier .afg pour continuer de les modifier.
-pouvoir exporter le resultat en .jpg et .png
Les calques ne sont pas necessaires pour l'import, on enregistre toutes nos formes avec leur attributs, profondeur, position, taille...

Alexandre :
"-pouvoir enregistrer en .afg et pouvoir ouvrir les fichier .afg pour continuer de les modifier." > Guillaume s'en charge normalement...
"-pouvoir exporter le resultat en .jpg et .png" d'accord, mais je tiens beaucoup à faire l'export en SVG, j'ai d'ailleurs commencer. 
Il faut juste me préciser comment obtenir le rayon du cercle.
"Les calques ne sont pas necessaires pour l'import, on enregistre toutes nos formes avec leur attributs, profondeur, position, taille..." Pour l'export tu veux dire ?

Francois:
"Il faudra aussi voir l'import (demandé)...D'où la necessité de faire des calques, je trouve." tu as parlé de calques pour l'import, 
on peut ajouter la gestion mais je ne vois pas pourquoi on en a besoin pour l'import.
L'export/import svg c'est tres bien continue, pour le cercle cherche plutot a faire des ellipses en svg:
le point central = pos(x,y) + 1/2 sz(x,y)..
rx = sz.getX()/2;
ry = sz.getY()/2;
cela marchera pour les ellipses, et donc pour les cercles, ou rx=ry
